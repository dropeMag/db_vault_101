/*----------------------------------------------------
TB_QUARTO
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_quarto(in_descricao VARCHAR(50), in_tamanho INTEGER)
BEGIN
	IF LENGTH(in_descricao) < 4 THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Descrição inválida; Muito curta.';
	ELSEIF in_tamanho NOT BETWEEN 1 AND 3 THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Tamanho inválido para o quarto.';
	ELSE
		INSERT INTO tb_quartos
			(descricao, tamanho)
        VALUES
			(in_descricao, in_tamanho);
	END IF;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_update_quarto(up_id INTEGER, up_descricao VARCHAR(50), up_tamanho INTEGER)
BEGIN
	DECLARE var_descricao VARCHAR(50);
	DECLARE var_tamanho INTEGER;
    
    IF((SELECT id_quarto FROM tb_quartos WHERE id_quarto = up_id) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O id_quarto não existe.';
    ELSEIF (LENGTH(up_descricao) < 4) OR (NOT NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Descrição inválida; Muito curta.';
	ELSEIF up_tamanho NOT BETWEEN 1 AND 3 THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Tamanho inválido para o quarto.';
	ELSE
		IF (up_descricao IS NULL) THEN
			SET var_descricao = (SELECT descricao FROM tb_quartos WHERE id_quarto = up_id);
		ELSE
			SET var_descricao = up_descricao;
		END IF;
        
		IF (up_tamanho IS NULL) THEN
			SET var_tamanho = (SELECT tamanho FROM tb_quartos WHERE id_quarto = up_id);
		ELSE
			SET var_tamanho = up_tamanho;
		END IF;
        
		UPDATE tb_quartos
        SET descricao = var_descricao,
			tamanho = var_tamanho
		WHERE id_quarto = up_id;
    END IF;
END //
DELIMITER ;



/*----------------------------------------------------
TB_ROUPA
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_roupa(in_nome VARCHAR(25), in_qnt INTEGER, in_str INTEGER, in_per INTEGER, in_end INTEGER, in_car INTEGER, in_int INTEGER, in_agi INTEGER, in_luc INTEGER)
BEGIN
	IF (LENGTH(in_nome) < 4) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho do nome é inválido.';
	ELSEIF (in_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
	ELSEIF ((SELECT nome FROM tb_roupa WHERE LOWER(nome) = LOWER(in_nome)) IS NOT NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Essa roupa já foi cadastrada.';
	ELSE
		IF in_str <= 0 THEN SET in_str = NULL; END IF;
		IF in_per <= 0 THEN SET in_per = NULL; END IF;
		IF in_end <= 0 THEN SET in_end = NULL; END IF;
		IF in_car <= 0 THEN SET in_car = NULL; END IF;
		IF in_int <= 0 THEN SET in_int = NULL; END IF;
		IF in_agi <= 0 THEN SET in_agi = NULL; END IF;
		IF in_luc <= 0 THEN SET in_luc = NULL; END IF;
        
        INSERT INTO tb_special
        VALUES (DEFAULT, in_str, in_per, in_end, in_car, in_int, in_agi, in_luc);
        
        INSERT INTO tb_estoque
        VALUES (DEFAULT);
        
        INSERT INTO tb_roupa
        VALUES (DEFAULT, in_nome, in_qnt, (SELECT MAX(id_special) FROM tb_special),
                                          (SELECT MAX(id_estoque) FROM tb_estoque));
    END IF;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_update_roupa(up_id INTEGER, up_qnt INTEGER)
BEGIN
	IF ((SELECT id_roupa FROM tb_roupa WHERE id_roupa = up_id) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O id_roupa não existe.';
	ELSEIF (up_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
	ELSE
        UPDATE tb_roupa
        SET quantidade = up_qnt
        WHERE id_roupa = up_id;
    END IF;
END //
DELIMITER ;



/*----------------------------------------------------
TB_ARMA
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_arma(in_nome VARCHAR(25), in_mira VARCHAR(5), in_qnt INTEGER)
BEGIN
	IF (LENGTH(in_nome) < 4) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho do nome é inválido';
	ELSEIF (LENGTH(in_mira) < 1) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A descrição da mira é inválida.';
	ELSEIF (in_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
   	ELSEIF ((SELECT nome FROM tb_arma WHERE LOWER(nome) = LOWER(in_nome)) IS NOT NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Essa arma já foi cadastrada.';
	ELSE
		INSERT INTO tb_estoque
        VALUES (DEFAULT);
        
        INSERT INTO tb_arma
        VALUES (DEFAULT, in_nome, in_mira, in_qnt, (SELECT MAX(id_estoque) FROM tb_estoque));
    END IF;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_update_arma(up_id INTEGER, up_qnt INTEGER)
BEGIN
	IF((SELECT id_arma FROM tb_arma WHERE id_arma = up_id) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O id_arma não existe.';
	ELSEIF (up_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
	ELSE
		UPDATE tb_arma
        SET quantidade = up_qnt
        WHERE id_arma = up_id;
	END IF;
END //
DELIMITER ;



/*----------------------------------------------------
TB_PET
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_pet(in_nome VARCHAR(25), in_caract VARCHAR(25), in_qnt INTEGER)
BEGIN
	IF(LENGTH(in_nome) < 3) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho do nome é inválido';
	ELSEIF (LENGTH(in_caract) < 5) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho da característica é inválido';
	ELSEIF (in_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
	ELSEIF ((SELECT nome FROM tb_pet WHERE LOWER(nome) = LOWER(in_nome)) IS NOT NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Esse pet já foi cadastrado.';
	ELSE
        INSERT INTO tb_estoque
        VALUES (DEFAULT);
        
        INSERT INTO tb_pet
        VALUES (DEFAULT, in_nome, in_caract, in_qnt, (SELECT MAX(id_estoque) FROM tb_estoque));
    END IF;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_update_pet(up_id INTEGER, up_qnt INTEGER)
BEGIN
	IF((SELECT id_pet FROM tb_pet WHERE id_pet = up_id) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O id_pet não existe.';
	ELSEIF (up_qnt < 0) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'A quantidade mínima é 0.';
	ELSE
        UPDATE tb_pet
        SET quantidade = up_qnt
        WHERE id_pet = up_id;
    END IF;
END //
DELIMITER ;



/*----------------------------------------------------
TB_PROFISSAO
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_profissao(in_profissao VARCHAR(25))
BEGIN
	IF(LENGTH(in_profissao) < 5) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho do nome é inválido';
	ELSEIF ((SELECT nome FROM tb_profissao WHERE LOWER(nome) = LOWER(in_profissao)) IS NOT NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Essa profissão já foi cadastrada.';
	ELSE
		INSERT INTO tb_profissao
        VALUES (DEFAULT, in_profissao);
    END IF;
END //
DELIMITER ;



DELIMITER //
CREATE PROCEDURE sp_update_profissao(up_id INTEGER, up_profissao VARCHAR(25))
BEGIN
	IF(LENGTH(up_profissao) < 5) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tamanho do nome é inválido';
	ELSEIF((SELECT id_profissao FROM tb_profissao WHERE id_profissao = up_id) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O id_profissao não existe';
	ELSE
		UPDATE tb_profissao
        SET nome = up_profissao
        WHERE id_profissao = up_id;
    END IF;
END //
DELIMITER ;



/*----------------------------------------------------
TB_BAIXA
----------------------------------------------------*/
DELIMITER //
CREATE PROCEDURE sp_insert_baixa(in_habitante INTEGER, in_data DATETIME, in_incidente INTEGER, in_quest BOOLEAN)
BEGIN
	IF((SELECT id_habitante FROM tb_habitante WHERE id_habitante = in_habitante) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O habitante não foi localizado.';
	ELSEIF((SELECT id_baixa FROM tb_habitante WHERE id_habitante = in_habitante) IS NOT NULL) THEN
		IF((SELECT status FROM tb_habitante WHERE id_habitante = in_habitante) <> 1) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Atenção: habitante possui uma baixa, mas está com status ativo; verifique se há algum erro.';
        ELSE
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O habitante já possui uma baixa.';
		END IF;
    ELSEIF(in_data > NOW()) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Não é permitido datas futuras';
	ELSEIF((SELECT id_incidente FROM tb_tipo_incidente WHERE id_incidente = in_incidente) IS NULL) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'O tipo de incidente não existe';
	ELSEIF(in_quest NOT IN (0, 1)) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = "A 'quest' só aceita valores booleanos.";
	ELSE
		INSERT INTO tb_baixa
        VALUES (DEFAULT, in_data, in_incidente, in_quest);
        
        UPDATE tb_habitante
        SET status = 1, id_baixa = (SELECT MAX(id_baixa) FROM tb_baixa)
        WHERE id_habitante = in_habitante;
    END IF;
END //
DELIMITER ;